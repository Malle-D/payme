import 'package:bloc/bloc.dart';import 'package:meta/meta.dart';import 'package:payme_clone/data/models/auth_model.dart';import 'package:payme_clone/data/repository/app_repository.dart';import 'package:payme_clone/di/di.dart';part 'auth_event.dart';part 'auth_state.dart';class AuthBloc extends Bloc<AuthEvent, AuthState> {  final _repository = getIt<AppRepository>();  AuthBloc() : super(AuthInitial()) {    on<AuthCheckEvent>((event, emit) async {      try {        bool result = await _repository.checkNumber(event.authModel);        if (result) {          emit(AuthSuccessState());        } else {          emit(AuthFailState());        }      } catch (e) {        print(e.toString());      }    });  }}